package org.example.trendyolfinalproject.controller;

import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.example.trendyolfinalproject.model.request.AddBalanceRequest;
import org.example.trendyolfinalproject.model.request.ChangeDefaultPaymentMethod;
import org.example.trendyolfinalproject.model.request.PaymentMethodCreateRequest;
import org.example.trendyolfinalproject.model.request.PaymentRequest;
import org.example.trendyolfinalproject.model.response.*;
import org.example.trendyolfinalproject.service.PaymentMethodService;
import org.example.trendyolfinalproject.service.PaymentTransactionService;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/v1/payment-methods")
@RequiredArgsConstructor
public class PaymentMethodController {
    private final PaymentMethodService paymentMethodService;
    private final PaymentTransactionService paymentTransactionService;


    @PostMapping
    @PreAuthorize("hasAnyRole('CUSTOMER','SELLER')")
    ApiResponse<PaymentMethodResponse> createPaymentMethod(@RequestBody @Valid PaymentMethodCreateRequest request) {
        return paymentMethodService.createPaymentMethod(request);
    }

    @PostMapping("/add-balance")
    @PreAuthorize("hasAnyRole('CUSTOMER','SELLER')")
    public ApiResponse<String> addbalance(@RequestBody @Valid AddBalanceRequest request) {
        return paymentMethodService.addbalance(request);
    }

    @PostMapping("/default")
    @PreAuthorize("hasAnyRole('CUSTOMER','SELLER')")
    public ApiResponse<PaymentMethodResponse> changeDefaultPaymentMethod(@RequestBody @Valid ChangeDefaultPaymentMethod request) {
        return paymentMethodService.changeDefaultPaymentMethod(request);
    }

//    @GetMapping("/{paymentMethodId}/transactions")
//    public ApiResponse<List<TransactionResponse>> getTransactions(@PathVariable Long paymentMethodId) {
//        return paymentTransactionService.getPaymentTransaction(paymentMethodId);
//
//    }

    @PostMapping("/pay")
    public ApiResponse<PaymentResponse> pay(@RequestBody @Valid PaymentRequest request) {
        return paymentMethodService.pay(request);
    }

    @GetMapping("/transactions")
    public ApiResponse<List<TransactionResponse>> getAllTransactions() {
        return paymentTransactionService.getAllTransactions();
    }

}
